#!/usr/bin/env bash
# These Global Variables are the defaults values for the current setup.
declare -g -A G=(
  [csv]="emails.csv"
  # Below you probably don't need to change
  [host]="https://experts.ucdavis.edu"
  [shell_getopt]=${FLAGS_GETOPT_CMD:-getopt}
  [dry-run]=
  [jwt]=''
);

if ! opts=$(${G[shell_getopt]} -o h:j:c: --long host:,jwt:,csv: -n "count-experts" -- "$@"); then
    echo "Bad Command Options." >&2 ; exit 1 ; fi

    eval set -- "$opts"

    while true; do
        case "$1" in
            -h | --host ) G[host]="$2"; shift 2 ;;
            -j | --jwt ) G[jwt]="$2"; shift 2 ;;
            -c | --csv ) G[csv]="$2"; shift 2 ;;
            -- ) shift; break ;;
            * ) break ;;
        esac
    done

    if [ -z "${G[jwt]}" ]; then
      echo "JWT is required. Use -j or --jwt to provide it." >&2 ; exit 1 ;
    fi

    echo 'id,name,preferred,email,title,org' > ${G[csv]}
    host=${G[host]}
    # set session
    http --session=dev ${host}/api/expert/browse/ Authorization:"Bearer ${G[jwt]}"
    http='http --session-read-only=dev'
    for i in A B C D E F G H I J K L M N O P Q R S T U V W X Y Z; do
      for e in $($http $host/api/expert/browse p==$i page==1 size==1000  | jq -r '.hits[]["@id"]'); do
        $http POST $host/api/$e <<<'{"expert": {"include":true},"grants" : {"include" : false},"works" : {"include" : false}}' | jq -r --arg i "$i" --arg e "$e" '.name as $n | .["@graph"][0].contactInfo[] | [.["@id"],.name,.isPreferred,.hasEmail,.hasTitle.name,.hasOrganizationalUnit.name] | @csv';
  done;
done | tee --append ${G[csv]}

# THIS FILE GENERATED FROM ../README.org
   PREFIX : <http://oapolicy.universityofcalifornia.edu/vocab#>
   PREFIX bibo: <http://purl.org/ontology/bibo/>
   PREFIX cdl: <http://oapolicy.universityofcalifornia.edu/>
   PREFIX cite: <http://citationstyles.org/schema/>
   PREFIX expert: <http://experts.ucdavis.edu/expert/>
   PREFIX experts: <http://experts.ucdavis.edu/>
   PREFIX kfs: <ark:/87287/d7gt0q/schema#>
   PREFIX list: <http://jena.apache.org/ARQ/list#>
   PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
   PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
   PREFIX ucdlib: <http://schema.library.ucdavis.edu/schema#>
   PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>
   PREFIX venue: <http://experts.ucdavis.edu/venue/>
   PREFIX vivo: <http://vivoweb.org/ontology/core#>
   PREFIX work: <http://experts.ucdavis.edu/work/>
   PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
   construct {
     ?grant_role a ucdlib:GrantRole, ?role;
                   ucdlib:favorite ?favorite;
                   ucdlib:is-visible ?visible;
                   vivo:relates ?expert,?grant;
                   .

     ?grant a ucdlib:Grant,vivo:Grant,?grant_type;
            ?field_predicate ?field_text;
            ?field_predicate ?field_money;
            vivo:assignedBy ?funder;
            vivo:dateTimeInterval ?interval;
            vivo:relatedBy ?grant_role,?labeled_only_pi_role,?labeled_only_co_pi_role;
            .

     ?grant_type rdfs:label ?funding_type_label;
                 .

     ?labeled_only_pi_role a vivo:PrincipalInvestigatorRole;
                              vivo:relates ?labeled_only_pi,?grant;
                              .

     ?labeled_only_co_pi_role a vivo:CoPrincipalInvestigatorRole;
                              vivo:relates ?labeled_only_co_pi,?grant;
                        .

     ?funder a vivo:FundingOrganization;
             rdfs:label ?funder_label;
             .

     ?interval
     vivo:start ?sd;
     vivo:end ?ed;
     .

     ?sd
     vivo:dateTimePrecision ?start_date_precision;
     vivo:dateTime ?start_date;
     .
  ?ed
     vivo:dateTimePrecision ?end_date_precision;
     vivo:dateTime ?end_date;
     .
}
WHERE {
  graph cdl: {
    ?RELATIONSHIP__
    :is-visible ?visible_str;
    :type ?cdl_type;
    :related ?g;
    :related ?user;
    .

    OPTIONAL {
      VALUES (?cdl_type ?vivo_role ) {
        ("user-grant-principal-investigation" vivo:PrincipalInvestigatorRole)
        ("user-grant-co-principal-investigation" vivo:CoPrincipalInvestigatorRole)
        ("user-grant-senior-key-personnel" vivo:ResearcherRole )
        ("user-grant-co-primary-investigation" vivo:CoPrincipalInvestigatorRole)
        ("user-grant-primary-investigation" vivo:PrincipalInvestigatorRole)
        ("user-grant-program-direction" vivo:LeaderRole)
        ("user-grant-project-leadership" vivo:LeaderRole)
        ("user-grant-research" vivo:ResearcherRole)
      }
      }

    OPTIONAL {
      ?RELATIONSHIP__ :is-favourite "true".
      bind(true as ?favorite)
    }

    ?user :category "user";
          :username ?username;
          .

    {
      select ?relationship ?g ?record ?source
      WHERE {
        {
          select ?relationship ?g (min(?id) as ?wanted_source_id)
          WHERE {
            bind(?RELATIONSHIP__ as ?relationship)
            graph cdl: {
              ?RELATIONSHIP__ :related ?g.

              ?g :category "grant";
                 :records/:record/:source-id ?id;
                 .
            }
          }  group by ?relationship ?g
        }
        ?g :records/:record ?record;
           .
        ?record :source-name  ?source;
                :source-id ?wanted_source_id;
                .
      }
    }
    ?record :native/:field ?field.

    VALUES(?field_name ?field_type ?field_predicate) {
      ("title" "text" rdfs:label)
      ("amount" "money" vivo:totalAwardAmount)
      ("start-date" "date" vivo:start)
      ("end-date" "date" vivo:end)
      ("funder-reference" "text" vivo:sponsorAwardId)
      ("funding-type" "special" ucdlib:none)
      ("funder-name" "special" ucdlib:none)
    }

    OPTIONAL {
      ?field :name ?field_name;
             :type "text";
             :type ?field_type ;
      :text ?field_text ;
      .
    }
    OPTIONAL {
      ?field :name ?field_name;
             :type "money";
             :type ?field_type;
             :money/:field-value ?field_money;
             .
    }

    # Funding type is a special case
    OPTIONAL {
      values (?grant_type ?funding_type_label) {
        (ucdlib:Grant_AcademicSupport "Academic Support" )
        (ucdlib:Grant_Default "Default" )
        (ucdlib:Grant_Instruction "Instruction" )
        (ucdlib:Grant_Research "Research" )
        (ucdlib:Grant_Service "Service / Other" )
        (ucdlib:Grant_Scholarship "Scholarships / Fellowships" )
        (ucdlib:Grant_StudentService "Student Services" )
      }
      ?field :name "funding-type";
             :type "text";
             :text ?funding_type_label;
             .
    }

    OPTIONAL {
      ?field :name "funder-name";
             :type "text";
             :text ?funder_label;
             .
    }

    {
      select ?g ?start_date ?start_date_precision ?end_date ?end_date_precision
      WHERE {
        {
          select ?relationship ?g ?record ?source
          WHERE {
            {
              select ?relationship ?g (min(?id) as ?wanted_source_id)
              WHERE {
                bind(?RELATIONSHIP__ as ?relationship)
                graph cdl: {
                  ?RELATIONSHIP__ :related ?g.

                  ?g :category "grant";
                     :records/:record/:source-id ?id;
                     .
                }
              }  group by ?relationship ?g
            }
            ?g :records/:record ?record;
               .
            ?record :source-name  ?source;
                    :source-id ?wanted_source_id;
                    .
          }
        }
        ?record :native/:field ?s;
                :native/:field ?e;
                .

        ?s :name "start-date";
           :type "date";
           :date ?s_date;
           .
        ?s_date :year ?syear.

        BIND(vivo:yearPrecision AS ?syear_p)
        OPTIONAL {
          ?s_date :month ?sm_raw.
          BIND(concat("-",IF(strlen(?sm_raw) = 1,
                             CONCAT("0", ?sm_raw), ?sm_raw)) AS ?smonth)
          BIND(vivo:yearMonthPrecision AS ?smonth_p)
          OPTIONAL {
            ?s_date :day ?sd_raw.
            BIND(concat("-",IF(strlen(?sd_raw) =1,
                               CONCAT("0", ?sd_raw), ?sd_raw)) AS ?sday)
            BIND(vivo:yearMonthDayPrecision AS ?sday_p)
          }
        }
        BIND(CONCAT(?syear, COALESCE(?smonth, ""), COALESCE(?sday, "")) AS ?start_date)
        BIND(coalesce(?sday_p,?smonth_p,?syear_p) as ?start_date_precision)

        ?e :name "end-date";
           :type "date";
           :date ?e_date;
           .
        ?e_date :year ?eyear.

        BIND(vivo:yearPrecision AS ?eyear_p)
        OPTIONAL {
          ?e_date :month ?em_raw.
          BIND(concat("-",IF(strlen(?em_raw) = 1,
                             CONCAT("0", ?em_raw), ?em_raw)) AS ?emonth)
          BIND(vivo:yearMonthPrecision AS ?emonth_p)
          OPTIONAL {
            ?e_date :day ?ed_raw.
            BIND(concat("-",IF(strlen(?ed_raw) =1,
                               CONCAT("0", ?ed_raw), ?ed_raw)) AS ?eday)
            BIND(vivo:yearMonthDayPrecision AS ?eday_p)
          }
        }
        BIND(CONCAT(?eyear, COALESCE(?emonth, ""), COALESCE(?eday, "")) AS ?end_date)
        BIND(coalesce(?eday_p,?emonth_p,?eyear_p) as ?end_date_precision)

      }
    }
  }
  bind(uri(replace(str(?RELATIONSHIP__),str(cdl:),"ark:/87287/d7mh2m/relationship/")) as ?grant_role)
  bind(uri(replace(str(?g),str(cdl:),"ark:/87287/d7mh2m/grant/")) as ?grant)
  bind(uri(concat(str(expert:),md5(?username))) as ?expert)
  bind(xsd:boolean(?visible_str) as ?visible)
  bind(coalesce(?vivo_role,vivo:ResearcherRole) as ?role)

  bind(uri(concat(str(?grant),'#start_date')) as ?sd)
  bind(uri(concat(str(?grant),'#end_date')) as ?ed)
  bind(uri(concat(str(?grant),'#interval')) as ?interval)
  bind(uri(concat(str(?grant),"#funder")) as ?funder)
}

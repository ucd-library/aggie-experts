PREFIX : <http://oapolicy.universityofcalifornia.edu/vocab#>
PREFIX FoR: <http://experts.ucdavis.edu/concept/FoR/>
PREFIX expert: <http://experts.ucdavis.edu/expert/>
PREFIX experts: <http://experts.ucdavis.edu/>
PREFIX fedora: <http://fedora.info/definitions/v4/repository#>
PREFIX harvest_oap: <http://oapolicy.universityofcalifornia.edu/>
PREFIX list: <http://jena.apache.org/ARQ/list#>
PREFIX obo: <http://purl.obolibrary.org/obo/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX ucdlib: <http://schema.library.ucdavis.edu/schema#>
PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>
PREFIX vivo: <http://vivoweb.org/ontology/core#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

CONSTRUCT {
  # This  just copies IAM info
  ?iam_expert_s ?iam_p ?iam_expert_o.
  ?iam_expert_o vcard:title ?iam_o_title.

  # This adds the CDL information
  ?expert a vivo:Person,ucdlib:Expert;
               rdfs:label ?name;
               obo:ARG_2000028 ?vcard;
               schema:identifier ?expert, ?oapolicy_ark;
               ucdlib:is-visible ?visible;
               ?field_predicate ?field_value;
               .

  ?expert ?id_pred ?id_value.

  ?vcard a vcard:Individual;
         vivo:rank 20;
         schema:name ?vcard_label;
         vcard:hasName ?vcard_name;
         vcard:hasEmail ?vcard_email;
         vcard:hasURL ?vcard_web;
         ucdlib:isPreferred false;
         .

  ?vcard_name a vcard:Name;
              vcard:givenName ?fn;
              vcard:familyName ?ln;
              .

  ?vcard_web a vcard:URL, ?web_type;
             vcard:url ?web_url;
             vivo:rank ?web_rank;
             vcard:title ?web_label;
             .

  # Research Areas
  ?expert ?hasConcept ?concept.
  ?concept ?isConceptOf ?expert.

  ?concept a skos:Concept;
           skos:inScheme ?scheme;
           skos:prefLabel ?pref_label;
           .
}
WHERE {
  bind(uri(concat(str(expert:),MD5(?USERNAME__))) as ?user)
  graph <http://iam.ucdavis.edu/> {
    ?user a ucdlib:Expert;
          ucdlib:expert ?expert;
          ucdlib:is-visible true;
          .
    ?iam_s ?iam_p ?iam_o.
    # This is soo hacky,
    OPTIONAL {
      ?iam_o vcard:title ?iam_o_title.
    }
    filter(regex(str(?iam_s),concat('^',str(?user),'#?')))
    filter(?iam_p != ucdlib:userId)
    bind(uri(replace(str(?iam_s),concat('^',str(?user)),str(?expert))) as ?iam_expert_s)
    bind(if(isuri(?iam_o),uri(replace(str(?iam_o),concat('^',str(?user)),str(?expert))),?iam_o) as ?iam_expert_o)
  }
  GRAPH <http://oapolicy.universityofcalifornia.edu/> {
  ?cdl_id :category "user";
        :is-public "true",?visible_str;
        :is-login-allowed "true";
        :username ?USERNAME__;
        :last-name ?ln;
        :first-name ?fn;
        :user-identifier-associations ?assoc;
        .

    OPTIONAL {
      ?cdl_id :position ?title.
    }
    OPTIONAL {
      ?cdl_id :department ?dept.
    }

    ?assoc :user-id ?oapolicy_id.
    bind(uri(concat('ark:/87287/d7mh2m/user/',?oapolicy_id)) as ?oapolicy_ark)

    OPTIONAL {
      values (?oap_scheme ?id_pred) {
        ("researcherid" vivo:researcherId)
        ("orcid" vivo:orcidId)
        ("scopus-author-id" vivo:scopusId) }
      ?assoc :user-identifier-association [ :field-value  ?id_value ; :scheme ?oap_scheme ].
  }

    OPTIONAL {
      ?cdl_id :records/:record/:native ?native.
      OPTIONAL {
        ?native :field [ :name "email-addresses";
                         :type "email-address-list";
                         :email-addresses [
                                            :email-address [
                                                             :address ?email;
                                                             :privacy "public";
                                                           ]
                                          ]
                       ].
      }
      OPTIONAL {
        ?native :field [ :name "personal-websites";
                         :web-addresses/:web-address [ list:index(?pos ?elem) ]
                       ].

        ?elem :url ?web_url;
              :privacy "public";
              .
        OPTIONAL {
          ?elem :label ?web_label.
        }

        OPTIONAL {
          ?elem :type ?web_type_text.
          bind(uri(concat(str(ucdlib:),"URL_",?web_type_text)) as ?web_type)
        }
        bind(?pos as ?web_rank)
      }
      OPTIONAL {
        values (?field_name ?field_predicate ) {
          ("overview" vivo:overview)
          ("research-interests" ucdlib:researchInterests)
          ("teaching-summary" ucdlib:teachingSummary)
        }
        ?native :field [ :name ?field_name;
                         :text [ :field-value ?field_value;
                                 :privacy "public"; ]
                       ].
        }
    }
    # OPTIONAL {
    #   ?cdl_id :all-labels [
    #                         :type "keyword-list";
    #                         :keywords/:keyword [
    #                                              :field-value ?FoR_value;
    #                                              :scheme "for";
    #                                            ]
    #                       ].
    # }
    OPTIONAL {
      values (?scheme_label ?hasConcept ?isConceptOf) {
        ("c-ucd-avail" ucdlib:hasAvailability ucdlib:availabilityOf)
        ("for" vivo:hasResearchArea vivo:researchAreaOf )
      }

      ?cdl_id :all-labels [
                            :type "keyword-list";
                            :keywords/:keyword [
                                                 :field-value ?concept_label;
                                                 :scheme ?scheme_label;
                                               ]
                          ].
    }

  }
  bind(uri(concat("ark:/87287/d7nh2m/keyword/",encode_for_uri(?scheme_label),"/")) as ?scheme)
  bind(uri(concat(str(?scheme),if(?scheme_label="for",replace(?concept_label," .*",""),encode_for_uri(?concept_label)))) as ?concept)
  bind(if(?scheme_label="for",replace(?concept_label,"^[0-9]* ",""),?concept_label) as ?pref_label)
  bind(concat(?fn," ",?ln) as ?name)
  bind(uri(concat(str(?expert),"#vcard-oap-1")) as ?vcard)
  bind(uri(concat(str(?vcard),"-name")) as ?vcard_name)
  bind(xsd:boolean(?visible_str) as ?visible)
  bind(uri(concat('mailto:',str(?email))) as ?vcard_email)
  bind(uri(concat(str(?vcard),"-web-",str(?web_rank))) as ?vcard_web)
  bind(coalesce(concat(" ยง ",?title,coalesce(concat(", ",?dept),"")),
                "") as ?title_dept)
  bind(concat(
              concat(?ln,coalesce(concat(", ",?fn),"")),
              coalesce(?title_dept,"")
              ) as ?vcard_label)
}

PREFIX : <http://oapolicy.universityofcalifornia.edu/vocab#>
PREFIX bibo: <http://purl.org/ontology/bibo/>
PREFIX cdl: <http://oapolicy.universityofcalifornia.edu/>
PREFIX cite: <http://citationstyles.org/schema/>
PREFIX experts: <http://experts.ucdavis.edu/>
PREFIX list: <http://jena.apache.org/ARQ/list#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ucdlib: <http://schema.library.ucdavis.edu/schema#>
PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>
PREFIX venue: <http://experts.ucdavis.edu/venue/>
PREFIX vivo: <http://vivoweb.org/ontology/core#>
PREFIX work: <http://experts.ucdavis.edu/work/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

construct {
  ?work a ?bibo_type;
        bibo:status ?vivoStatus;
        .

  ?work a ucdlib:Work;
        cite:type ?cite_type;
        cite:genre ?cite_genre;
        cite:status ?status;
        cite:pagination ?pagination;
        ?field_predicate ?field_value;
        cite:issued ?pub_datestr;
        cite:date-available ?pub_odatestr;
        .

  ?work  cite:author ?authorship.

  ?authorship vivo:rank ?authorRank;
              cite:family ?authorFamilyName;
              cite:given ?authorGivenName;
              .

  # This needs to be stored as a journal
  ?work vivo:hasPublicationVenue ?journalURI .
  # This needs adding via indirect link
  #     ?journalURI vivo:publicationVenueFor ?experts_work_id .

  ?journalURI rdfs:label ?journal_title;
              vivo:issn ?issn;
              .
}
WHERE {
  graph cdl: {
    VALUES(?oap_type ?bibo_type ?cite_type ?cite_genre) {
      ("book" bibo:Book "book" "")
      ("chapter" bibo:Chapter "chapter" "")
      ("conference" vivo:ConferencePaper "paper-conference" "")
      ("dataset" ucdlib:work "dataset" "")
      ("internet-publication" ucdlib:work "webpage" "")
      ("journal-article" bibo:AcademicArticle "article-journal" "")
      ("media" ucdlib:work "article" "media")
      ("other" ucdlib:work "article" "other")
      ("poster" ucdlib:work "speech" "poster")
      ("preprint" ucdlib:PrePrint "article" "preprint" )
      ("presentation" ucdlib:work "speech" "presentation")
      ("report" ucdlib:work "report" "")
      ("scholarly-edition" ucdlib:work "manuscript" "scholarly-edition")
      ("software" ucdlib:work "software" "")
      ("thesis-dissertation" ucdlib:work "thesis" "disseration")
    }

    # Get every field_name
    {
      select ?field_name (min(?p) as ?priority)
      WHERE {
        VALUES (?source ?p) {
          ("verified-manual" 1)("dimensions" 2)("pubmed" 3)("scopus" 4)("wos" 5)
          ("wos-lite" 6)("crossref" 7)("epmc" 8)("arxiv" 9)("orcid" 10)("dblp" 11)
          ("cinii-english" 12)("repec" 13)("figshare" 14)
          ("cinii-japanese" 15)("manual" 16)("dspace" 17) }

        ?PUB__ :records/:record [ :source-name  ?source;
                                        :native/:field/:name ?field_name ].
      } group by ?field_name
    }
    VALUES (?source ?priority) {
      ("verified-manual" 1)("dimensions" 2)("pubmed" 3)("scopus" 4)("wos" 5)
      ("wos-lite" 6)("crossref" 7)("epmc" 8)("arxiv" 9)("orcid" 10)("dblp" 11)
      ("cinii-english" 12)("repec" 13)("figshare" 14)
      ("cinii-japanese" 15)("manual" 16)("dspace" 17) }

    # these are the fields to check
    VALUES(?field_name ?field_predicate) {
      ("doi" bibo:doi)
      ("abstract" cite:abstract)
      #("acceptance-date" cite:issued)
      #("addresses" cite:)
      #("altmetric-attention-score" cite:)
      #("associated-identifiers" cite:)
      #("author-url" cite:) # Was bib:uri
      ("authors" cite:EXPANDED) # This gets expanded below
      #("c-eschol-id" cite:) # Was bibo:identifier, should be a specific esscholarship identifier
      #("c-uci-id" cite:)
      #("c-ucsf-id" cite:)
      #("collections" cite:)
      #("confidential" cite:)
      ("doi" cite:DOI)
      ("edition" cite:edition)
      #("editors" cite:)
      ("eissn" cite:eissn)
      #("embargo-release-date" cite:)
      ("external-identifiers" cite:)
      #("field-citation-ratio" cite:)
      #("filed-date" cite:)
      #("finish-date" cite:)
      ("is-open-access" ucdlib:is-open-access)
      ("isbn-10" cite:ISBN)
      ("isbn-13" cite:ISBN)
      ("issn" cite:ISSN)
      ("issue" cite:issue)
      ("journal" cite:container-title)sr
      ("keywords" cite:keyword)
      ("language" cite:language)
      #("location" cite:)
      ("medium" cite:medium)
      ("name-of-conference" cite:container-title)
      ("notes" cite:note)
      ("number" cite:collection-number)
      ("oa-location-url" cite:url)
      ("online-publication-date" cite:available-date) # EXPANDED below
      ("pagination" cite:pagination) #EXPANDED below
      ("parent-title" cite:container-title)
      #("pii" cite:)
      ("place-of-publication" cite:publisher-place)
      ("public-url" cite:url)
      ("publication-date" cite:issued) # EXPANDED below
      ("publication-status" cite:status) #EXPANDED below
      ("publisher" cite:publisher)
      ("publisher-licence" cite:license)
      #("publisher-url" cite:)
      #("record-created-at-source-date" cite:)
      #("record-made-public-at-source-date" cite:)
      #("relative-citation-ratio" cite:)
      #("repository-status" cite:)
      ("series" cite:collection-number)
      #("start-date" cite:)
      ("thesis-type" cite:genre) # Hopefully cite:type set correctly
      ("title" cite:title)
      ("title" rdfs:label) # Simple label as well
      #("types" cite:genre) Handled elsewhere
      ("volume" cite:volume)
    }

    ?PUB__  :type ?oap_type;
            :last-modified-when ?lastModifiedWhen;
            :records/:record [ :source-name  ?source;
                                     :native/:field ?field ];
                                                          .
    bind(uri(replace(str(?PUB__),str(cdl:),concat(str(experts:),"ark:/87287/d7mh2m/publication/"))) as ?work)

    OPTIONAL {
      ?PUB__ :records/:record [ :source-name  ?source;
                                      :native/:field ?field_name;
                                      :native/:text ?doi ].
      filter(?field_name='doi')
    }
    #    bind(uri(replace(str(?PUB__),str(cdl:),str(work:))) as ?work)

    ?field :name ?field_name.

    OPTIONAL {
      ?PUB__ :type ?oap_type;
             .
    }
    OPTIONAL {
      ?field :text ?field_value ;
      .
    }
    # This is a tricky way to add in some optional extensntion from the field_names above.
    OPTIONAL {
      VALUES (?status ?vivoStatus) {
        ( "Published" bibo:published )
        ( "Published online" bibo:published )
        ( "Accepted" bibo:accepted )
      }
      ?field :text ?status.
      filter(?field_name="publication-status")
    }

    #Authors are combined lists of people
    OPTIONAL {
      ?field :people/:person [ list:index(?pos ?elem) ] .
      BIND(?pos+1 AS ?authorRank)
      #We are not putting in links until an authorship is made
      #OPTIONAL { ?elem :links/:link ?author_link.}
      OPTIONAL {
		    ?elem :last-name ?authorFamilyName .
      }
      OPTIONAL {
        ?elem :first-names ?authorGivenName .
	    }
    }
	  BIND(uri(concat(str(?work),"#",str(?authorRank))) as ?authorship)

    OPTIONAL {
      ?field :date ?pub_date.
      ?pub_date :year ?pub_year.
      filter(?field_name="publication-date" )
      OPTIONAL {
        ?pub_date :month ?pub_m_raw.
        BIND(concat("-",IF(xsd:integer(?pub_m_raw) < 10, CONCAT("0", ?pub_m_raw), ?pub_m_raw)) AS ?pub_month)
        OPTIONAL {
          ?pub_date :day ?pub_d_raw.
          BIND(concat("-",IF(xsd:integer(?pub_d_raw) < 10, CONCAT("0", ?pub_d_raw), ?pub_d_raw)) AS ?pub_day)
        }
      }
      BIND(CONCAT(?pub_year, COALESCE(?pub_month, ""), COALESCE(?pub_day, "")) AS ?pub_datestr)
    }

    OPTIONAL {
      ?field :date ?opub_date.
      ?opub_date :year ?opub_year.
      filter(?field_name="online-publication-date" )
      OPTIONAL {
        ?opub_date :month ?opub_m_raw.
        BIND(concat("-",IF(xsd:integer(?opub_m_raw) < 10, CONCAT("0", ?opub_m_raw), ?opub_m_raw)) AS ?opub_month)
        OPTIONAL {
          ?opub_date :day ?opub_d_raw.
          BIND(concat("-",IF(xsd:integer(?opub_d_raw) < 10, CONCAT("0", ?opub_d_raw), ?opub_d_raw)) AS ?opub_day)
        }
      }
      BIND(CONCAT(?opub_year, COALESCE(?opub_month, ""), COALESCE(?opub_day, "")) AS ?opub_datestr)
    }

    OPTIONAL {
      ?field :pagination [ :begin-page ?begin ].
      OPTIONAL {
        ?field :pagination [ :end-page ?end ].
      }
    }
    BIND(xsd:dateTime(?lastModifiedWhen) AS ?lastModifiedDateTime)
    BIND(concat(?begin,coalesce(concat('-',?end),'')) AS ?pagination)

    # Now we take CDLs preferred term
    OPTIONAL {
      ?PUB__ :journal [
                           :issn ?issn;
                           :title ?journal_title
                         ].
      BIND(uri(concat(str(venue:),"urn:issn:",?issn)) as ?journalURI)
    }
  }
}

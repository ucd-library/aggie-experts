openapi: 3.0.0
info:
  title: Aggie Experts API
  version: 1.0.0
  description: This is the Swagger documentation for Aggie Experts.
  license:
    name: Licensed Under MIT
    url: https://spdx.org/licenses/MIT.html
  contact:
    name: Online Strategy - UC Davis Library
    url: https://library.ucdavis.edu/online-strategy/
paths:
  /api/browse:
    get:
      tags:
        - browse
      summary: "Browse experts A - Z"
      description: "Returns counts for experts A - Z, or if sending query param p={letter}, will return results for experts with last names of that letter"
      parameters:
        - in: query
          name: p
          schema:
            type: string
          description: The letter the experts last name starts with
        - in: query
          name: page
          schema:
            type: integer
          description: The pagination of results to return, defaults to 1
        - in: query
          name: size
          schema:
            type: integer
          description: The number of results to return per page, defaults to 25
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/browse'
  /api/search:
    get:
      tags:
        - search
      summary: "Search ElasticSearch"
      description: "Returns matching search results for experts, including the number of matching works and grants"
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: The search term
        - in: query
          name: page
          schema:
            type: integer
          description: The pagination of results to return, defaults to 1
        - in: query
          name: size
          schema:
            type: integer
          description: The number of results to return per page, defaults to 25
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/search'
components:
  schemas:
    browse:
      type: "object"
      properties:
        params:
          type: "object"
          properties:
            size:
              type: "string"
            from:
              type: "integer"
            page:
              type: "string"
            p:
              type: "string"
        total:
          type: "integer"
        hits:
          type: "array"
          items:
            type: "object"
            properties:
              contactInfo:
                type: "object"
                properties:
                  hasURL:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        "@type":
                          type: "array"
                          items:
                            type: "string"
                        "@id":
                          type: "string"
                        url:
                          type: "string"
                        name:
                          type: "string"
                        rank:
                          type: "integer"
                  hasEmail:
                    type: "string"
                  hasName:
                    type: "object"
                    properties:
                      given:
                        type: "string"
                      "@type":
                        type: "string"
                      pronouns:
                        type: "string"
                      "@id":
                        type: "string"
                      family:
                        type: "string"
                  name:
                    type: "string"
                  hasTitle:
                    type: "object"
                    properties:
                      "@type":
                        type: "string"
                      name:
                        type: "string"
                      "@id":
                        type: "string"
                  hasOrganizationalUnit:
                    type: "object"
                    properties:
                      name:
                        type: "string"
                      "@id":
                        type: "string"
              name:
                type: "string"
              "@id":
                type: "string"
    name:
      type: object
      properties:
        given:
          type: string
        "@type":
          type: string
        "@id":
          type: string
        family:
          type: string
    title:
      type: object
      properties:
        "@type":
          type: string
        name:
          type: string
        "@id":
          type: string
    organizationalUnit:
      type: object
      properties:
        name:
          type: string
        "@id":
          type: string
    contactInfo:
      type: object
      properties:
        hasEmail:
          type: string
        hasName:
          $ref: '#/components/schemas/name'
        name:
          type: string
        hasTitle:
          $ref: '#/components/schemas/title'
        hasOrganizationalUnit:
          $ref: '#/components/schemas/organizationalUnit'
    author:
      type: object
      properties:
        given:
          type: string
        rank:
          type: integer
        "@id":
          type: string
        family:
          type: string
    innerHits:
      type: object
      properties:
        volume:
          type: string
        "@type":
          type: array
          items:
            type: string
        author:
          type: array
          items:
            $ref: '#/components/schemas/author'
        "container-title":
          type: string
        ISSN:
          type: string
        abstract:
          type: string
        page:
          type: string
        title:
          type: string
        type:
          type: string
        issued:
          type: string
        status:
          type: string
    search:
      type: object
      properties:
        contactInfo:
          $ref: '#/components/schemas/contactInfo'
        "@type":
          type: string
        name:
          type: string
        "@id":
          type: string
        _inner_hits:
          type: array
          items:
            $ref: '#/components/schemas/innerHits'

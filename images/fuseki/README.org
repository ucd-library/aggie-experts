* Jena Fuseki HDT

 The idea here is create a more agile fuseki/jena system that can be used to
 create the file based inputs for our cloud computing environment.  So multiple
 versions can be started up at any given time, and used to poppulate the cloud
 based services.

 We are trying to use the standard [[https://jena.apache.org/documentation/fuseki2/fuseki-layout.html][fuseki layout]], FUSEKI_HOME and FUSEKI_BASE.
 This allows us to have the configuration files in the image.  The databases are
 not in their default location, but are instead at: /var/lib/fuseki/databases.
 The fuseki layout file identifies that we need remove the ${FUSEKI_BASE}/system
 and ${FUSEKI_BASE}/system_files to reset the server.

 Some good review of all of Jena's tools are found in this [[https://www.bobdc.com/blog/jenagems/][blog post]].

** Environmental Variables

   The following environmental variables are used.  These are primarily used in
   the config.ttl.tmpl file.  The current image reloads the config.tll.tmpl into
   the /fuseki/config.ttl file on every startup.  This is to allow us to see
   changes affected in the .env file.  I suppose, we could instead do this on
   every *new* container, not on every startup.

   For now, however, that means you need to change the config.ttl.tmpl version
   if you want to change config.ttl for testing.

   - ~${FUSEKI_TIMEOUT_FIRST:-30000}~ How long to wait (in ms) for first output

   - ~${FUSEKI_TIMEOUT_REST:-120000}~ When to stop delivering data

   - ~${FUSEKI_ARQ_LOGEXEC:-info}~ Log Level info,fine or full See [[https://jena.apache.org/documentation/fuseki2/fuseki-logging.html][Logging]]

   - ~${FUSEKI_PASSWORD:-testing123}~ Fuseke Admin password

   - ~${FUSEKI_BASE}~ Fuseki base (set to ucd.process in our setup)


** Docker instance

   The Dockerfile combines the Apache Jena Project, both jena and fuseki, along
   with update the the ~/fuseki/extra~ area to support hdt-jena, and also a JS
   engine.

   The fuseki instance actually copies existing jars from the apache jena repo,
   and adds them to the image.

** Running the image

   The docker image entrypoint ends by starting the FUSEKI endpoint. This means
   that to properly configure this, you need to setup files in the
   /etc/fuseki/configuation location.

   See the [[file:hdt-example][hdt-example]] directory for an example configuration
